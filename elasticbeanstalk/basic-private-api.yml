---
# This AWS CloudFormation template
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This example template demonstrates creating a single EC2 instance with UserData that 
  initializes the instances. In this case, the UserData calls cfn-init, which uses 
  the default configSet to initialize the instance.
Parameters:

  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC into which the instances should be provisioned.

  PrivateInstanceSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnets into which to provision the EC2 instances

  AccessedBySecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: The IDs of the security groups that have access to the instances

  MinInstanceCount:
    Type: String
    Description: The minimum number of instances in the auto scaling cluster
    Default: "1"

  MaxInstanceCount:
    Type: String
    Description: The maximum number of instances in the auto scaling cluster
    Default: "1"

  ApplicationName:
    Type: String
    Description: The name of the ElasticBeanstalk application

  EnvironmentName:
    Type: String
    Description: The name of the ElasticBeanstalk environment

  Runtime:
    Type: String
    Description: The name of the runtime for the instances
    Default: "64bit Amazon Linux 2018.03 v2.12.11 running Docker 18.06.1-ce"

  InstanceListenPort:
    Type: Number
    Description: The port on the instances on which an application is listening.

  EC2InstanceProfile:
    Type: String
    Description: The name of the IAM instance profile to use for the EC2 instances.

  EC2InstanceType:
    Type: String
    Description: The type (size) of the EC2 instance in the ElasticBeanstalk environment.

Outputs:

  EndpointUrl:
    Value: !GetAtt ElasticBeanstalkEnvironment.EndpointURL
    Description: The URL of the newly-created ElasticBeanstalk environment

Resources:

  ElasticBeanstalkEnvironment:
    Type: "AWS::ElasticBeanstalk::Environment"
    Properties:
      ApplicationName: !Ref ApplicationName
      EnvironmentName: !Ref EnvironmentName
      Description: !Sub "${EnvironmentName} environment for application ${ApplicationName}"
      SolutionStackName: !Ref Runtime
      OptionSettings:

        - Namespace: "aws:autoscaling:launchconfiguration"
          OptionName: InstanceType
          Value: !Ref EC2InstanceType

        - Namespace: "aws:autoscaling:launchconfiguration"
          OptionName: "IamInstanceProfile"
          Value: !Ref EC2InstanceProfile

        - Namespace: "aws:autoscaling:launchconfiguration"
          OptionName: "SecurityGroups"
          Value: !Join [ ",", !Ref AccessedBySecurityGroupIds ]

        - Namespace: "aws:autoscaling:asg"
          OptionName: "MinSize"
          Value: !Ref MinInstanceCount

        - Namespace: "aws:autoscaling:asg"
          OptionName: "MaxSize"
          Value: !Ref MaxInstanceCount

        - Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
          Value: !Sub "${VPCId}"
          
        - Namespace: "aws:ec2:vpc"
          OptionName: "Subnets"
          Value: !Join [ ",", !Ref PrivateInstanceSubnets ]

        - Namespace: "aws:ec2:vpc"
          OptionName: "ELBScheme"
          Value: "internal"

        - Namespace: "aws:ec2:vpc"
          OptionName: "AssociatePublicIpAddress"
          Value: "false"

        - Namespace: "aws:elasticbeanstalk:application"
          OptionName: "Application Healthcheck URL"
          Value: "/executor/info"

        - Namespace: "aws:elasticbeanstalk:environment"
          OptionName: "LoadBalancerType"
          Value: "application"

